/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
 */

@interface CUNANPublisher : NSObject <WiFiAwarePublisherDelegate> {
    id  _activateCompletion;
    unsigned int  _controlFlags;
    BOOL  _dataPathEnabled;
    id  _dataSessionEndedHandler;
    id  _dataSessionStartedHandler;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    id  _interruptionHandler;
    BOOL  _invalidateCalled;
    BOOL  _invalidateDone;
    id  _invalidationHandler;
    NSString * _label;
    NSString * _name;
    int  _port;
    id  _receiveHandler;
    NSString * _serviceType;
    NSMutableDictionary * _sessions;
    NSDictionary * _textInfo;
    unsigned int  _trafficFlags;
    struct LogCategory { int x1; int x2; char *x3; unsigned int x4; char *x5; char *x6; int x7; struct LogCategory {} *x8; struct LogOutput {} *x9; struct LogOutput {} *x10; unsigned long long x11; unsigned long long x12; unsigned int x13; unsigned int x14; char *x15; struct LogCategoryPrivate {} *x16; } * _ucat;
    WiFiAwarePublisher * _wfaPublisher;
}

@property (nonatomic) unsigned int controlFlags;
@property (nonatomic) BOOL dataPathEnabled;
@property (nonatomic, copy) id dataSessionEndedHandler;
@property (nonatomic, copy) id dataSessionStartedHandler;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) id interruptionHandler;
@property (nonatomic, copy) id invalidationHandler;
@property (nonatomic, copy) NSString *label;
@property (nonatomic, copy) NSString *name;
@property (nonatomic) int port;
@property (nonatomic, copy) id receiveHandler;
@property (nonatomic, copy) NSString *serviceType;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSDictionary *textInfo;
@property (nonatomic) unsigned int trafficFlags;

- (void).cxx_destruct;
- (void)_activateWithCompletion:(id)arg1;
- (void)_invalidate;
- (void)_invalidated;
- (void)_publisher:(id)arg1 dataConfirmedForHandle:(id)arg2 localInterfaceIndex:(unsigned int)arg3 serviceSpecificInfo:(id)arg4;
- (void)activateWithCompletion:(id)arg1;
- (unsigned int)controlFlags;
- (BOOL)dataPathEnabled;
- (id)dataSessionEndedHandler;
- (id)dataSessionStartedHandler;
- (void)dealloc;
- (id)description;
- (id)dispatchQueue;
- (id)init;
- (id)interruptionHandler;
- (void)invalidate;
- (id)invalidationHandler;
- (id)label;
- (id)name;
- (int)port;
- (void)publisher:(id)arg1 dataConfirmedForHandle:(id)arg2 localInterfaceIndex:(unsigned int)arg3 serviceSpecificInfo:(id)arg4;
- (void)publisher:(id)arg1 dataIndicatedForHandle:(id)arg2 serviceSpecificInfo:(id)arg3;
- (void)publisher:(id)arg1 dataTerminatedForHandle:(id)arg2 reason:(long long)arg3;
- (void)publisher:(id)arg1 failedToStartWithError:(long long)arg2;
- (void)publisher:(id)arg1 receivedMessage:(id)arg2 fromSubscriberID:(unsigned char)arg3 subscriberAddress:(id)arg4;
- (void)publisher:(id)arg1 terminatedWithReason:(long long)arg2;
- (void)publisherStarted:(id)arg1;
- (id)receiveHandler;
- (void)reportIssue:(id)arg1;
- (void)sendMessageData:(id)arg1 endpoint:(id)arg2 completionHandler:(id)arg3;
- (id)serviceType;
- (void)setControlFlags:(unsigned int)arg1;
- (void)setDataPathEnabled:(BOOL)arg1;
- (void)setDataSessionEndedHandler:(id)arg1;
- (void)setDataSessionStartedHandler:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setInterruptionHandler:(id)arg1;
- (void)setInvalidationHandler:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)setName:(id)arg1;
- (void)setPort:(int)arg1;
- (void)setReceiveHandler:(id)arg1;
- (void)setServiceType:(id)arg1;
- (void)setTextInfo:(id)arg1;
- (void)setTrafficFlags:(unsigned int)arg1;
- (id)textInfo;
- (unsigned int)trafficFlags;

@end
