/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils
 */

@interface CUBluetoothClient : NSObject <CBCentralManagerDelegate, CBPeripheralManagerDelegate, IOBluetoothDaemonNSXPCDelegate> {
    id  _bluetoothAddressChangedHandler;
    int  _bluetoothState;
    id  _bluetoothStateChangedHandler;
    NSData * _btAdvertisingAddress;
    CBCentralManager * _btCentralManager;
    BOOL  _btCentralManagerNeeded;
    NSMutableDictionary * _btConnectedDevices;
    BOOL  _btConnectionDevicesInitialized;
    BOOL  _btConnectionEventsNeeded;
    NSMutableDictionary * _btPairedDevices;
    BOOL  _btPairedDevicesInitialized;
    CBPeripheralManager * _btPeripheralManager;
    BOOL  _btPeripheralManagerNeeded;
    id  _deviceConnectedHandler;
    id  _deviceDisconnectedHandler;
    id  _deviceEventHandler;
    id  _devicePairedHandler;
    id  _deviceUnpairedHandler;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    NSMutableArray * _findDeviceRequests;
    unsigned int  _flags;
    id  _interruptionHandler;
    BOOL  _invalidateCalled;
    BOOL  _invalidateDone;
    id  _invalidationHandler;
    IOBluetoothDaemonNSXPCClient * _iobtXPCClient;
    NSString * _label;
    id  _relayMessageReceivedHandler;
    NSMutableArray * _relayMessages;
    unsigned int  _requiredServices;
    unsigned int  _statusFlags;
    struct LogCategory { int x1; int x2; char *x3; unsigned int x4; char *x5; char *x6; int x7; struct LogCategory {} *x8; struct LogOutput {} *x9; struct LogOutput {} *x10; unsigned long long x11; unsigned long long x12; unsigned int x13; unsigned int x14; char *x15; struct LogCategoryPrivate {} *x16; } * _ucat;
    NSMutableArray * _updateDevicesRequests;
    id  _updateTipiHandler;
}

@property (nonatomic, copy) id bluetoothAddressChangedHandler;
@property (nonatomic) int bluetoothState;
@property (nonatomic, copy) id bluetoothStateChangedHandler;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id deviceConnectedHandler;
@property (nonatomic, copy) id deviceDisconnectedHandler;
@property (nonatomic, copy) id deviceEventHandler;
@property (nonatomic, copy) id devicePairedHandler;
@property (nonatomic, copy) id deviceUnpairedHandler;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic) unsigned int flags;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) id interruptionHandler;
@property (nonatomic, copy) id invalidationHandler;
@property (nonatomic, copy) NSString *label;
@property (nonatomic, copy) id relayMessageReceivedHandler;
@property (nonatomic) unsigned int requiredServices;
@property (nonatomic) unsigned int statusFlags;
@property (readonly) Class superclass;
@property (nonatomic, copy) id updateTipiHandler;

- (void).cxx_destruct;
- (void)_btEnsureStarted;
- (void)_btEnsureStopped;
- (void)_completeRelayMessage:(id)arg1 error:(id)arg2;
- (void)_externalInvokeBlock:(id)arg1;
- (void)_findDeviceByAddress:(struct { unsigned char x1[6]; })arg1 completion:(id)arg2;
- (void)_handleAACPConnected:(id)arg1;
- (void)_handleBluetoothAddressChanged;
- (void)_handleDeviceConnected:(id)arg1;
- (void)_handleDeviceDisconnected:(id)arg1;
- (void)_handlePairingStatusChanged:(id)arg1;
- (id)_internalDispatchQueue;
- (void)_invalidated;
- (void)_ioBluetoothDeviceTearDown:(id)arg1;
- (void)_sendRelayMessage:(id)arg1;
- (void)_setDeviceFlags:(unsigned int)arg1 mask:(unsigned int)arg2 deviceID:(id)arg3 completion:(id)arg4;
- (void)_setDeviceState:(unsigned int)arg1 deviceID:(id)arg2 peerAddress:(id)arg3 completion:(id)arg4;
- (void)_setHighPriority:(BOOL)arg1 deviceID:(id)arg2 completion:(id)arg3;
- (void)_setHijackState:(BOOL)arg1 deviceID:(id)arg2 completion:(id)arg3;
- (void)_setupIOBluetoothDevice:(id)arg1 cuBluetoothDevice:(id)arg2;
- (void)_updateAccessoryID:(id)arg1 connectionDeviceAddresses:(id)arg2 completion:(id)arg3;
- (void)aacpCommandStatusEvent:(unsigned short)arg1 reason:(unsigned short)arg2 forDevice:(id)arg3;
- (void)aacpRelayMessageEvent:(id)arg1 forDevice:(id)arg2 source:(id)arg3;
- (void)activate;
- (id)bluetoothAddressChangedHandler;
- (int)bluetoothState;
- (id)bluetoothStateChangedHandler;
- (void)centralManagerDidUpdateState:(id)arg1;
- (void)dealloc;
- (id)description;
- (id)descriptionWithLevel:(int)arg1;
- (id)deviceConnectedHandler;
- (id)deviceDisconnectedHandler;
- (id)deviceEventHandler;
- (id)devicePairedHandler;
- (id)deviceUnpairedHandler;
- (id)dispatchQueue;
- (void)findDeviceByAddress:(struct { unsigned char x1[6]; })arg1 completion:(id)arg2;
- (unsigned int)flags;
- (id)init;
- (id)interruptionHandler;
- (void)invalidate;
- (id)invalidationHandler;
- (id)label;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)peripheralManagerDidUpdateState:(id)arg1;
- (id)relayMessageReceivedHandler;
- (unsigned int)requiredServices;
- (void)sendRelayMessage:(id)arg1;
- (void)setBluetoothAddressChangedHandler:(id)arg1;
- (void)setBluetoothState:(int)arg1;
- (void)setBluetoothStateChangedHandler:(id)arg1;
- (void)setDeviceConnectedHandler:(id)arg1;
- (void)setDeviceDisconnectedHandler:(id)arg1;
- (void)setDeviceEventHandler:(id)arg1;
- (void)setDeviceFlags:(unsigned int)arg1 mask:(unsigned int)arg2 deviceID:(id)arg3 completion:(id)arg4;
- (void)setDevicePairedHandler:(id)arg1;
- (void)setDeviceState:(unsigned int)arg1 deviceID:(id)arg2 peerAddress:(id)arg3 completion:(id)arg4;
- (void)setDeviceUnpairedHandler:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setFlags:(unsigned int)arg1;
- (void)setHighPriority:(BOOL)arg1 deviceID:(id)arg2 completion:(id)arg3;
- (void)setHijackState:(BOOL)arg1 deviceID:(id)arg2 completion:(id)arg3;
- (void)setInterruptionHandler:(id)arg1;
- (void)setInvalidationHandler:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)setRelayMessageReceivedHandler:(id)arg1;
- (void)setRequiredServices:(unsigned int)arg1;
- (void)setStatusFlags:(unsigned int)arg1;
- (void)setUpdateTipiHandler:(id)arg1;
- (unsigned int)statusFlags;
- (void)updateAccessoryID:(id)arg1 connectionDeviceAddresses:(id)arg2 completion:(id)arg3;
- (void)updateStatusFlags;
- (id)updateTipiHandler;

@end
